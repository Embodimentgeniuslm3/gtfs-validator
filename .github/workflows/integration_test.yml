name: Integration tests

on:
  push:
    branches: [ master, new-test-module ]

jobs:
  download-latest-gtfs-validator-release-jar:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v1
      - name: Download last release of the validator
        uses: suisei-cn/actions-download-file@v1
        id: gtfs-validator
        with:
          url: "https://github.com/MobilityData/gtfs-validator/releases/download/v2.0.0/gtfs-validator-v2.0.0_cli.jar"
          target: public/
  fetch-urls:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - name: Get url list as json
        id: set-matrix
        # The below outputs a JSON array and uses GitHub Actions magic (::set-output) to set
        # an output variable
        run: |
          DATASETS=$(curl https://gtfs-validator.free.beeceptor.com/datasets)
          echo $DATASETS
          echo "::set-output name=matrix::$DATASETS"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  pack-latest-changes:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - uses: actions/checkout@v1
      - name: Prepare version name
        id: prep
        run: |
          VERSION_TAG=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION_TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION_TAG=-$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION_TAG=-pr-${{ github.event.number }}
          fi
          if [ ${VERSION_TAG} != ${GITHUB_REF#refs/tags/} ]; then
            VERSION_TAG=v${VERSION_TAG}-sha-${GITHUB_SHA::8}-SNAPSHOT
          fi
          echo ::set-output name=versionTag::${VERSION_TAG}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Package cli app jar with Gradle
        uses: eskatos/gradle-command-action@v1
        env:
          versionTag: ${{ steps.prep.outputs.versionTag }}
        with:
          arguments: shadowJar
      - name: Persist cli app jar
        uses: actions/upload-artifact@v2
        with:
          name: gtfs-validator_cli
          path: main/build/libs/gtfs-validator-${{ steps.prep.outputs.versionTag }}_cli.jar
  get-report-latest-changes:
    needs: [ pack-latest-changes, fetch-urls ]
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix: ${{ fromJson(needs.fetch-urls.outputs.matrix) }}
    steps:
      - name: Download latest changes .jar file from previous job
        uses: actions/download-artifact@v2
        with:
          name: gtfs-validator_cli
      - name: Display url
        run: echo ${{ matrix.url }}
     - name: Execute jar
        run: java -jar gtfs-validator*.jar -u ${{ matrix.url }} -o output/${{ matrix.output }} -v latest_changes.json
